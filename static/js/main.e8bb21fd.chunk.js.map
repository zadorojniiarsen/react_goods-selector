{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","resetGoods","setState","addGoods","product","currentState","generateTitle","message","length","firstPartOfGoods","slice","join","lastGood","this","className","type","onClick","map","good","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8FaC,E,4MAtFbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,WACX,EAAKC,SAAS,CAAEF,cAAe,M,EAGjCG,SAAW,SAACC,GACV,EAAKF,UAAS,SAACG,GAAD,MAAmB,CAC/BL,cAAc,GAAD,mBAAMK,EAAaL,eAAnB,CAAkCI,S,EAInDE,cAAgB,WACd,IAAQN,EAAkB,EAAKD,MAAvBC,cAEJO,EAAU,GAUd,GAR6B,IAAzBP,EAAcQ,SAChBD,EAAU,qBAGiB,IAAzBP,EAAcQ,SAChBD,EAAO,UAAMP,EAAN,iBAGLA,EAAcQ,OAAS,EAAG,CAC5B,IAAMC,EAAmBT,EAAcU,MAAM,GAAI,GAAGC,KAAK,MACnDC,EAAWZ,EAAcA,EAAcQ,OAAS,GAEtDD,EAAO,UAAME,EAAN,gBAA8BG,EAA9B,iBAGT,OAAOL,G,4CAGT,WAAU,IAAD,OACCP,EAAkBa,KAAKd,MAAvBC,cAER,OACE,sBAAKc,UAAU,MAAf,UACE,oBAAIA,UAAU,mBAAd,SACGD,KAAKP,kBAGNN,EAAcQ,OAAS,GACvB,wBACEO,KAAK,SACLD,UAAU,yBACVE,QAASH,KAAKZ,WAHhB,eASF,oBAAIa,UAAU,kBAAd,SACGjB,EAAgBoB,KAAI,SAAAC,GAAI,OACvB,qBACEJ,UAAWK,IACRnB,EAAcoB,SAASF,GAEpB,YADA,mBAHR,UAQGA,GACElB,EAAcoB,SAASF,IACxB,wBACEH,KAAK,SACLD,UAAU,oBACVE,QAAS,WACP,EAAKb,SAASe,IAJlB,mBAJGA,e,GAjEDG,IAAMC,WClBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e8bb21fd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  resetGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  addGoods = (product: string) => {\n    this.setState((currentState) => ({\n      selectedGoods: [...currentState.selectedGoods, product],\n    }));\n  };\n\n  generateTitle = () => {\n    const { selectedGoods } = this.state;\n\n    let message = '';\n\n    if (selectedGoods.length === 0) {\n      message = 'No selected goods';\n    }\n\n    if (selectedGoods.length === 1) {\n      message = `${selectedGoods} is selected`;\n    }\n\n    if (selectedGoods.length > 1) {\n      const firstPartOfGoods = selectedGoods.slice(0, -1).join(', ');\n      const lastGood = selectedGoods[selectedGoods.length - 1];\n\n      message = `${firstPartOfGoods} and ${lastGood} are selected`;\n    }\n\n    return message;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-goods__title\">\n          {this.generateTitle()}\n        </h1>\n\n        {(selectedGoods.length > 0) && (\n          <button\n            type=\"button\"\n            className=\"App-goods__title-reset\"\n            onClick={this.resetGoods}\n          >\n            X\n          </button>\n        )}\n\n        <ul className=\"App-goods__list\">\n          {goodsFromServer.map(good => (\n            <li\n              className={classNames(\n                !selectedGoods.includes(good)\n                  ? 'App-goods__item'\n                  : 'App-added',\n              )}\n              key={good}\n            >\n              {good}\n              {(!selectedGoods.includes(good)) && (\n                <button\n                  type=\"button\"\n                  className=\"App-goods__button\"\n                  onClick={() => {\n                    this.addGoods(good);\n                  }}\n                >\n                  add\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}